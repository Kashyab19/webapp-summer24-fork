name: Build and Test Without Docker

on:
  pull_request:
    branches:
      - feature

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2

    - name: Install PostgreSQL
      run: |
        sudo apt-get update
        sudo apt-get install -y postgresql postgresql-contrib
        sudo service postgresql start
        POSTGRES_USER=kashyabmurali
        POSTGRES_PASSWORD=postgres
        if [ -z "$POSTGRES_USER" ]; then POSTGRES_USER="defaultuser"; fi
        if [ -z "$POSTGRES_PASSWORD" ]; then POSTGRES_PASSWORD="defaultpassword"; fi
        sudo -u postgres psql -c "CREATE USER \"$POSTGRES_USER\" WITH SUPERUSER ENCRYPTED PASSWORD '$POSTGRES_PASSWORD';"
        sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE postgres TO \"$POSTGRES_USER\";"

    - name: Configure PostgreSQL (Enable uuid-ossp)
      run: |
        sudo -u postgres psql -d postgres -c "CREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";"

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.21.6' # Adjust based on your project's Go version

    - name: Cache Go Modules
      uses: actions/cache@v2
      env:
        cache-name: cache-go-modules
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Install Dependencies
      run: go mod tidy

    - name: Build Project
      run: go build -v ./...

    - name: Run Tests
      run: go test -v ./...
      env:
        POSTGRES_USER: kashyabmurali
        POSTGRES_PASSWORD: postgres
        POSTGRES_DB: postgres
        POSTGRES_HOST: localhost
        POSTGRES_PORT: 5432
